namespace php {
class PharException {
  private:
    Variant _this;
  public:
    PharException(const std::initializer_list<Variant> &args);
    Variant __wakeup();
    Variant getMessage();
    Variant getCode();
    Variant getFile();
    Variant getLine();
    Variant getTrace();
    Variant getPrevious();
    Variant getTraceAsString();
    Variant __toString();
};

class Phar {
  private:
    Variant _this;
  public:
    Phar(const std::initializer_list<Variant> &args);
    Variant addEmptyDir(const std::initializer_list<Variant> &args);
    Variant addFile(const std::initializer_list<Variant> &args);
    Variant addFromString(const std::initializer_list<Variant> &args);
    Variant buildFromDirectory(const std::initializer_list<Variant> &args);
    Variant buildFromIterator(const std::initializer_list<Variant> &args);
    Variant compressFiles(const std::initializer_list<Variant> &args);
    Variant decompressFiles();
    Variant compress(const std::initializer_list<Variant> &args);
    Variant decompress(const std::initializer_list<Variant> &args);
    Variant convertToExecutable(const std::initializer_list<Variant> &args);
    Variant convertToData(const std::initializer_list<Variant> &args);
    Variant copy(const std::initializer_list<Variant> &args);
    Variant count(const std::initializer_list<Variant> &args);
    Variant _delete(const std::initializer_list<Variant> &args);
    Variant delMetadata();
    Variant extractTo(const std::initializer_list<Variant> &args);
    Variant getAlias();
    Variant getPath();
    Variant getMetadata(const std::initializer_list<Variant> &args);
    Variant getModified();
    Variant getSignature();
    Variant getStub();
    Variant getVersion();
    Variant hasMetadata();
    Variant isBuffering();
    Variant isCompressed();
    Variant isFileFormat(const std::initializer_list<Variant> &args);
    Variant isWritable();
    Variant offsetExists(const std::initializer_list<Variant> &args);
    Variant offsetGet(const std::initializer_list<Variant> &args);
    Variant offsetSet(const std::initializer_list<Variant> &args);
    Variant offsetUnset(const std::initializer_list<Variant> &args);
    Variant setAlias(const std::initializer_list<Variant> &args);
    Variant setDefaultStub(const std::initializer_list<Variant> &args);
    Variant setMetadata(const std::initializer_list<Variant> &args);
    Variant setSignatureAlgorithm(const std::initializer_list<Variant> &args);
    Variant setStub(const std::initializer_list<Variant> &args);
    Variant startBuffering();
    Variant stopBuffering();
    static Variant apiVersion();
    static Variant canCompress(const std::initializer_list<Variant> &args);
    static Variant canWrite();
    static Variant createDefaultStub(const std::initializer_list<Variant> &args);
    static Variant getSupportedCompression();
    static Variant getSupportedSignatures();
    static Variant interceptFileFuncs();
    static Variant isValidPharFilename(const std::initializer_list<Variant> &args);
    static Variant loadPhar(const std::initializer_list<Variant> &args);
    static Variant mapPhar(const std::initializer_list<Variant> &args);
    static Variant running(const std::initializer_list<Variant> &args);
    static Variant mount(const std::initializer_list<Variant> &args);
    static Variant mungServer(const std::initializer_list<Variant> &args);
    static Variant unlinkArchive(const std::initializer_list<Variant> &args);
    static Variant webPhar(const std::initializer_list<Variant> &args);
    Variant hasChildren(const std::initializer_list<Variant> &args);
    Variant getChildren();
    Variant getSubPath();
    Variant getSubPathname();
    Variant rewind();
    Variant key();
    Variant current();
    Variant getFlags();
    Variant setFlags(const std::initializer_list<Variant> &args);
    Variant getFilename();
    Variant getExtension();
    Variant getBasename(const std::initializer_list<Variant> &args);
    Variant isDot();
    Variant valid();
    Variant next();
    Variant seek(const std::initializer_list<Variant> &args);
    Variant __toString();
    Variant getPathname();
    Variant getPerms();
    Variant getInode();
    Variant getSize();
    Variant getOwner();
    Variant getGroup();
    Variant getATime();
    Variant getMTime();
    Variant getCTime();
    Variant getType();
    Variant isReadable();
    Variant isExecutable();
    Variant isFile();
    Variant isDir();
    Variant isLink();
    Variant getLinkTarget();
    Variant getRealPath();
    Variant getFileInfo(const std::initializer_list<Variant> &args);
    Variant getPathInfo(const std::initializer_list<Variant> &args);
    Variant openFile(const std::initializer_list<Variant> &args);
    Variant setFileClass(const std::initializer_list<Variant> &args);
    Variant setInfoClass(const std::initializer_list<Variant> &args);
    Variant __debugInfo();
    Variant _bad_state_ex();
};

class PharData {
  private:
    Variant _this;
  public:
    PharData(const std::initializer_list<Variant> &args);
    Variant addEmptyDir(const std::initializer_list<Variant> &args);
    Variant addFile(const std::initializer_list<Variant> &args);
    Variant addFromString(const std::initializer_list<Variant> &args);
    Variant buildFromDirectory(const std::initializer_list<Variant> &args);
    Variant buildFromIterator(const std::initializer_list<Variant> &args);
    Variant compressFiles(const std::initializer_list<Variant> &args);
    Variant decompressFiles();
    Variant compress(const std::initializer_list<Variant> &args);
    Variant decompress(const std::initializer_list<Variant> &args);
    Variant convertToExecutable(const std::initializer_list<Variant> &args);
    Variant convertToData(const std::initializer_list<Variant> &args);
    Variant copy(const std::initializer_list<Variant> &args);
    Variant count(const std::initializer_list<Variant> &args);
    Variant _delete(const std::initializer_list<Variant> &args);
    Variant delMetadata();
    Variant extractTo(const std::initializer_list<Variant> &args);
    Variant getAlias();
    Variant getPath();
    Variant getMetadata(const std::initializer_list<Variant> &args);
    Variant getModified();
    Variant getSignature();
    Variant getStub();
    Variant getVersion();
    Variant hasMetadata();
    Variant isBuffering();
    Variant isCompressed();
    Variant isFileFormat(const std::initializer_list<Variant> &args);
    Variant isWritable();
    Variant offsetExists(const std::initializer_list<Variant> &args);
    Variant offsetGet(const std::initializer_list<Variant> &args);
    Variant offsetSet(const std::initializer_list<Variant> &args);
    Variant offsetUnset(const std::initializer_list<Variant> &args);
    Variant setAlias(const std::initializer_list<Variant> &args);
    Variant setDefaultStub(const std::initializer_list<Variant> &args);
    Variant setMetadata(const std::initializer_list<Variant> &args);
    Variant setSignatureAlgorithm(const std::initializer_list<Variant> &args);
    Variant setStub(const std::initializer_list<Variant> &args);
    Variant startBuffering();
    Variant stopBuffering();
    static Variant apiVersion();
    static Variant canCompress(const std::initializer_list<Variant> &args);
    static Variant canWrite();
    static Variant createDefaultStub(const std::initializer_list<Variant> &args);
    static Variant getSupportedCompression();
    static Variant getSupportedSignatures();
    static Variant interceptFileFuncs();
    static Variant isValidPharFilename(const std::initializer_list<Variant> &args);
    static Variant loadPhar(const std::initializer_list<Variant> &args);
    static Variant mapPhar(const std::initializer_list<Variant> &args);
    static Variant running(const std::initializer_list<Variant> &args);
    static Variant mount(const std::initializer_list<Variant> &args);
    static Variant mungServer(const std::initializer_list<Variant> &args);
    static Variant unlinkArchive(const std::initializer_list<Variant> &args);
    static Variant webPhar(const std::initializer_list<Variant> &args);
    Variant hasChildren(const std::initializer_list<Variant> &args);
    Variant getChildren();
    Variant getSubPath();
    Variant getSubPathname();
    Variant rewind();
    Variant key();
    Variant current();
    Variant getFlags();
    Variant setFlags(const std::initializer_list<Variant> &args);
    Variant getFilename();
    Variant getExtension();
    Variant getBasename(const std::initializer_list<Variant> &args);
    Variant isDot();
    Variant valid();
    Variant next();
    Variant seek(const std::initializer_list<Variant> &args);
    Variant __toString();
    Variant getPathname();
    Variant getPerms();
    Variant getInode();
    Variant getSize();
    Variant getOwner();
    Variant getGroup();
    Variant getATime();
    Variant getMTime();
    Variant getCTime();
    Variant getType();
    Variant isReadable();
    Variant isExecutable();
    Variant isFile();
    Variant isDir();
    Variant isLink();
    Variant getLinkTarget();
    Variant getRealPath();
    Variant getFileInfo(const std::initializer_list<Variant> &args);
    Variant getPathInfo(const std::initializer_list<Variant> &args);
    Variant openFile(const std::initializer_list<Variant> &args);
    Variant setFileClass(const std::initializer_list<Variant> &args);
    Variant setInfoClass(const std::initializer_list<Variant> &args);
    Variant __debugInfo();
    Variant _bad_state_ex();
};

class PharFileInfo {
  private:
    Variant _this;
  public:
    PharFileInfo(const std::initializer_list<Variant> &args);
    Variant chmod(const std::initializer_list<Variant> &args);
    Variant compress(const std::initializer_list<Variant> &args);
    Variant decompress();
    Variant delMetadata();
    Variant getCompressedSize();
    Variant getCRC32();
    Variant getContent();
    Variant getMetadata(const std::initializer_list<Variant> &args);
    Variant getPharFlags();
    Variant hasMetadata();
    Variant isCompressed(const std::initializer_list<Variant> &args);
    Variant isCRCChecked();
    Variant setMetadata(const std::initializer_list<Variant> &args);
    Variant getPath();
    Variant getFilename();
    Variant getExtension();
    Variant getBasename(const std::initializer_list<Variant> &args);
    Variant getPathname();
    Variant getPerms();
    Variant getInode();
    Variant getSize();
    Variant getOwner();
    Variant getGroup();
    Variant getATime();
    Variant getMTime();
    Variant getCTime();
    Variant getType();
    Variant isWritable();
    Variant isReadable();
    Variant isExecutable();
    Variant isFile();
    Variant isDir();
    Variant isLink();
    Variant getLinkTarget();
    Variant getRealPath();
    Variant getFileInfo(const std::initializer_list<Variant> &args);
    Variant getPathInfo(const std::initializer_list<Variant> &args);
    Variant openFile(const std::initializer_list<Variant> &args);
    Variant setFileClass(const std::initializer_list<Variant> &args);
    Variant setInfoClass(const std::initializer_list<Variant> &args);
    Variant __toString();
    Variant __debugInfo();
    Variant _bad_state_ex();
};

}
